#Tstar: 5800. # temperature of the star in Kelvin
#Rstar: 1.2 # Radius of the star in solar radius
#fextra: 0.5 # fextra=0.1 percentage of internal heating added to the Teq
#Albedo: 0.3 # Albedo of the planet

noise_prof: 'yes' # to compute the noise and background profile
snr_plot: 'yes' # to compute the snr plots

p: 4   # number of images for a run, or number of images added to a previous run
p_prev: 0   # number of previous images used for a run on which other p images will be added, for a new run put 0
n: 124   # size of the images nxn
total_time: 0  # total time for all the observations in years for simulations, put 0 for real observations and fill the time variable
time: "1.322381930184805+2.2642026009582477+2.924024640657084+4.188911704312115" # time (years) of each observation for p images

# To compute the flux at a given position, the optimize step can use 2 methods:
# - "aperture" uses an exact computation, from photutils. More precise but much
#   slower. This method is always used in the gradient reoptimization step.
# - "convolve" uses images that have been upsampled (factor 5 below) and
#   convolved with an aperture mask.
method: "convolve"
upsampling_factor: 5

invvar_weight: False

# Remove planet for the noise and background computation
# [x, y, radius] for each image
# remove_planet:
#   - [20, 35, 5]
#   - [20, 35, 5]
#   - [20, 35, 5]

work_dir: "."
images_dir: "images"   # folder where to load the images
grid_dir: "brute_grid"   # folder where to save the grid and the values of signals and noises after the brute force
values_dir: "values"   # folder where to save the results
profile_dir: "profiles"   # folder where to save and load the background and noise profiles
single_plot: 'yes'    # yes or no to display the positions of the planet in each frame for the best solutions
adding: 'no'   # yes or no if you want to add new p images to a previous run. WARNING : use the exact same grid as the previous run.

# in brute force, keep solutions with SNR >= min_snr
min_snr: 5

# number of maxima that will be reoptimized by the gradient descent algorithm
# (default=100)
q: 100

# distance of the star (parsec)
# used to project the orbits on the CCD and in the convertion a.u. in pixels
dist: 86.2

# FWHM (pixel)
# used to compute the diameter of the circle for integration of the flux,
# diameter = 2 x FWHM
fwhm: 1.6887225152574619

# plate-scale (marcsec/pixel)
# used to define the size of the circle for integration of the flux and
# convert a.u. in pixels
resol: 12.25

# Radius of the internal and external coronagraphic mask (in pixels).
# Put at zero all the values inside / outside this circle.
r_mask: 26
r_mask_ext: 61

mask_value: 0. # Put the min value of the speckles. Default 0.

# Ranges for the parameters:
# - min, max and number of steps for the brute force
# - value and number of steps for the SNR profiles (used to determine
#   the grid steps)
a:
  label: "a, semi-major axis (a.u.)"
  min: 40.
  max: 62.
  N: 8
  init: 58.
  Ninit: 3000
e:
  label: "e, eccentricity"
  min: 0.
  max: 0.4
  N: 10
  init: 0.05
  Ninit: 2000
t0:
  label: "t0, epoch at perihelion (years)"
  min: -393.
  max: -0.01
  N: 56
  init: -0.01
  Ninit: 2000
m0:
  label: "mass of the star (solar mass)"
  min: 1.59
  max: 1.59
  N: 1
  init: 1.59
  Ninit: 1
omega:
  label: "omega, longitude of the ascending node (rad)"
  min: -3.14
  max: 3.14
  N: 42
  init: -0.1
  Ninit: 3000
i:
  label: "i, inclination (rad)"
  min: 0.
  max: 3.14
  N: 6
  init: 0.1
  Ninit: 3000
theta_0:
  label: "theta_0, argument of the periapsis (rad)"
  min: -3.14
  max: 3.14
  N: 42
  init: 0.1
  Ninit: 3000

# min/max values on x/y axis for the plot of the orbits (in a.u.)
xmin: -64.
xmax: 64.
ymin: -64.
ymax: 64.
